{"version":3,"file":"static/webpack/1.61d9002c21810e013e01.hot-update.js","sources":["webpack:///./components/SommWidget.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport posed, {PoseGroup} from 'react-pose'\nimport styled, { keyframes } from 'styled-components';\nimport vhCheck from 'vh-check'\n\nconst WidgetContainer = styled.div`\n  position: fixed;\n  ${props => props.position}: ${props => props.position == \"left\" ? '64px' : '16px'};\n  bottom: 16px;\n  z-index: 8;\n`;\n\nconst PosedWidgetToggle = posed.div({\n  enter: {\n    scale: 1,\n    opacity: 1,\n  },\n  exit: {\n    scale: 0,\n    opacity: 0,\n  },\n  init: {\n    scale: 0,\n    opacity: 0,\n  }\n})\n\nconst WidgetToggle = styled(props => <PosedWidgetToggle {...props} />)`\n  width: 48px;\n  height: 48px;\n  background: ${props => props.background};\n  box-shadow: 0 2px 16px -2px rgba(0,0,0,0.32);\n  border-radius: 8px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst WidgetFrame = posed.div({\n  enter: {\n    scale: 1,\n    opacity: 1,\n  },\n  exit: {\n    scale: 0,\n    opacity: 0,\n  },\n  init: {\n    scale: 0,\n    opacity: 0,\n  }\n})\n\nconst StyledWidgetFrame = styled(WidgetFrame)`\n  width: calc(100vw - 32px);\n  max-width: 360px;\n  height: ${props => `calc(${props.viewportHeight}px - 32px - 64px)`};\n  max-height: 600px;\n  display: block;\n  border: 0;\n  appearance: none;\n  background: #FFFFFF;\n  box-shadow: 0 2px 16px -2px rgba(0,0,0,0.32);\n  border-radius: 8px;\n  overflow: hidden;\n  position: absolute;\n  bottom: 64px;\n  ${props => props.position}: ${props => props.position == \"left\" ? '-48px' : '0'};\n  scale: 1;\n  opacity: 1;\n  transform-origin: bottom ${props => props.position};\n`;\n\nconst WidgetToggleIcon = posed.div({\n  enter: {\n    scale: 1,\n    opacity: 1,\n  },\n  exit: {\n    scale: 0,\n    opacity: 0,\n  },\n  init: {\n    scale: 0,\n    opacity: 0,\n  }\n})\n\nconst StyledWidgetToggleIcon = styled(WidgetToggleIcon)`\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  scale: 1.5;\n  opacity: 1;\n\n  & svg {\n    fill: ${props => props.iconColor};\n  }\n`;\n\nconst spinnerAnimation = keyframes`\n  0% {\n    top: 28px;\n    left: 28px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: -1px;\n    left: -1px;\n    width: 58px;\n    height: 58px;\n    opacity: 0;\n  }\n`\n\nconst SpinnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: scroll;\n  border-radius: 8px;\n\n  & iframe {\n    border-radius: 8px;\n  }\n`;\n\nconst Spinner = styled.div`\n  display: inline-flex;\n  position: relative;\n  width: 64px;\n  height: 64px;\n\n  & div {\n    position: absolute;\n    border: 4px solid ${props => props.color};\n    opacity: 1;\n    border-radius: 50%;\n    animation: ${spinnerAnimation} 1.5s cubic-bezier(0, 0.2, 0.8, 1) infinite\n  }\n\n  & div:nth-child(2) {\n    animation-delay: -0.5s;\n  }\n`\n\nconst PosedWidgetMessage = posed.div({\n  enter: {\n    scale: 1,\n    opacity: 1,\n    delay: 1000,\n  },\n  exit: {\n    scale: 0,\n    opacity: 0,\n  },\n  init: {\n    scale: 0,\n    opacity: 0,\n  }\n})\n\nconst WidgetMessage = styled((props) => <PosedWidgetMessage {...props} />)`\n  width: 224px;\n  display: block;\n  border: 0;\n  appearance: none;\n  background: #FFFFFF;\n  box-shadow: 0 2px 16px -2px rgba(0,0,0,0.32);\n  border-radius: 8px;\n  overflow: hidden;\n  position: absolute;\n  bottom: 64px;\n  right: 0;\n  scale: 1;\n  opacity: 1;\n  transform-origin: bottom right;\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  color: #1f1f1f;\n  font-size: 1rem;\n`;\n\nclass Widget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      hasOpened: false,\n      messageVisible: this.props.message ? true : false,\n    }\n  }\n\n  handleToggle() {\n\n  }\n\n  render() {\n\n    var test = vhCheck()\n    console.log(test);\n\n    return (\n      <WidgetContainer position={this.props.position}>\n        <PoseGroup animateOnMount preEnterPose=\"init\">\n          {this.state.messageVisible && !this.state.hasOpened &&\n            <WidgetMessage key=\"1\">\n              {this.props.message}\n            </WidgetMessage>\n          }\n        </PoseGroup>\n        <PoseGroup>\n          {this.state.open &&\n            <StyledWidgetFrame key=\"0\" viewportHeight={test.windowHeight} position={this.props.position}>\n              <SpinnerWrapper>\n                <iframe\n                  style={{ zIndex: 8, position: 'absolute', top: 0, left: 0, background: 'transparent', display: 'block' }}\n                  src={`https://app.somm.ca/${this.props.username}`}\n                  sandbox=\"allow-same-origin allow-scripts allow-popups allow-top-navigation\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  frameBorder=\"0\">\n                </iframe>\n                <Spinner color={this.props.iconColor}>\n                  <div></div>\n                  <div></div>\n                </Spinner>\n              </SpinnerWrapper>\n\n            </StyledWidgetFrame>\n          }\n        </PoseGroup>\n        <PoseGroup animateOnMount preEnterPose=\"init\">\n          <WidgetToggle key=\"-1\" background={this.props.backgroundColor} onClick={() => this.setState({ open: !this.state.open, hasOpened: true })}>\n              {this.state.open\n                ?\n                  <StyledWidgetToggleIcon iconColor={this.props.iconColor}>\n                    {this.props.icon === \"sharp\"\n                      ?\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                      </svg>\n                      :\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                        <path fill=\"none\" d=\"M0 0h24v24H0V0z\"/>\n                        <path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/>\n                      </svg>\n                    }\n                  </StyledWidgetToggleIcon>\n                :\n                  <StyledWidgetToggleIcon iconColor={this.props.iconColor}>\n                    {this.props.icon === \"rounded\" &&\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                        <path fill=\"none\" d=\"M0 0h24v24H0V0z\"/>\n                        <path d=\"M8.1 13.34l2.83-2.83-6.19-6.18c-.48-.48-1.31-.35-1.61.27-.71 1.49-.45 3.32.78 4.56l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L4.4 19.17c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 14.41l6.18 6.18c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 13l1.47-1.47z\"/>\n                      </svg>\n                    }\n                    {this.props.icon === \"sharp\" &&\n                      <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n                        <path fill=\"none\" d=\"M0 0h24v24H0V0z\"/>\n                        <path d=\"M8.1 13.34l2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z\"/>\n                      </svg>\n                    }\n                    {this.props.icon === \"emoji\" &&\n                      <WidgetToggleIconEmoji>üçΩÔ∏è</WidgetToggleIconEmoji>\n                    }\n                  </StyledWidgetToggleIcon>\n              }\n          </WidgetToggle>\n        </PoseGroup>\n      </WidgetContainer>\n    );\n  }\n\n}\n\nexport default Widget;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAYA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAeA;AAAA;AAAA;AAAA;AAGA;AAAA;AAWA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAeA;AAAA;AAAA;AAAA;AAUA;AAAA;AAIA;AAiBA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAQA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAVA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;;;AAIA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA3FA;AACA;AA8FA;;;;A","sourceRoot":""}